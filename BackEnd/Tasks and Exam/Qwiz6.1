class Shape {
  constructor() {
    if (new.target === Shape) {
      throw new Error("Cannot instantiate an abstract class.");
    }
  }


  calculateArea() {
    throw new Error("Method 'calculateArea()' must be implemented.");
  }

  display() {
    console.log("This is a shape.");
  }
}

class Circle extends Shape {
  constructor(radius) {
    super();
    this.radius = radius;
  }

  calculateArea() {
    return Math.PI * this.radius * this.radius;
  }
}

class Rectangle extends Shape {
  constructor(width, height) {
    super();
    this.width = width;
    this.height = height;
  }

  calculateArea() {
    return this.width * this.height;
  }
}

class Square extends Shape {
  constructor(side) {
    super();
    this.side = side;
  }

  calculateArea() {
    return this.side * this.side;
  }
}

const circle = new Circle(5);
console.log("Circle area:", circle.calculateArea()); 
circle.display(); 

const rectangle = new Rectangle(4, 6);
console.log("Rectangle area:", rectangle.calculateArea()); 
rectangle.display();

const square = new Square(5);
console.log("Square area:", square.calculateArea()); 
square.display(); 
